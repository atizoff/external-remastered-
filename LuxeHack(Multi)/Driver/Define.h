#pragma once
#define DEV_HANDLE             0x5000
#define IOCTL_JACK_W           (ULONG)CTL_CODE(DEV_HANDLE, 0x10, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_JACK_R           (ULONG)CTL_CODE(DEV_HANDLE, 0x100, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_GET_M            (ULONG)CTL_CODE(DEV_HANDLE, 0x150, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_JACK_A           (ULONG)CTL_CODE(DEV_HANDLE, 0x200, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_JACK_U           (ULONG)CTL_CODE(DEV_HANDLE, 0x250, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_JACK_P           (ULONG)CTL_CODE(DEV_HANDLE, 0x300, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_JACK_S           (ULONG)CTL_CODE(DEV_HANDLE, 0x350, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

typedef struct _COPY_JACK
{
	ULONG     pJackId;
	ULONGLONG pJackBuffer;
	ULONGLONG pJackAddress;
	ULONGLONG iJackSize;
} COPY_JACK, * PCOPY_JACK;

typedef struct _JACK_ACCESS
{
	ULONGLONG  pJackHandle;
	ULONG      pJackId;
	ULONG      pJackAccess;
} JACK_ACCESS, * PJACK_ACCESS;

typedef struct _JACK_UNLINK
{
	ULONG      pJackId;
} JACK_UNLINK, * PJACK_UNLINK;

typedef struct _JACK_UNLINK_PROCESS
{
	ULONG      pJackId;
} JACK_UNLINK_PROCESS, * PJACK_UNLINK_PROCESS;


